const Z3 = {
      "global_param_set": Module.cwrap("Z3_global_param_set", "number", [string,string]),
          "global_param_reset_all": Module.cwrap("Z3_global_param_reset_all", "number", []),
          "global_param_get": Module.cwrap("Z3_global_param_get", "number", [string,number]),
          "mk_config": Module.cwrap("Z3_mk_config", "number", []),
          "del_config": Module.cwrap("Z3_del_config", "number", [number]),
          "set_param_value": Module.cwrap("Z3_set_param_value", "number", [number,string,string]),
          "mk_context": Module.cwrap("Z3_mk_context", "number", [number]),
          "mk_context_rc": Module.cwrap("Z3_mk_context_rc", "number", [number]),
          "del_context": Module.cwrap("Z3_del_context", "number", [number]),
          "inc_ref": Module.cwrap("Z3_inc_ref", "number", [number,number]),
          "dec_ref": Module.cwrap("Z3_dec_ref", "number", [number,number]),
          "update_param_value": Module.cwrap("Z3_update_param_value", "number", [number,string,string]),
          "interrupt": Module.cwrap("Z3_interrupt", "number", [number]),
          "mk_params": Module.cwrap("Z3_mk_params", "number", [number]),
          "params_inc_ref": Module.cwrap("Z3_params_inc_ref", "number", [number,number]),
          "params_dec_ref": Module.cwrap("Z3_params_dec_ref", "number", [number,number]),
          "params_set_bool": Module.cwrap("Z3_params_set_bool", "number", [number,number,number,number]),
          "params_set_uint": Module.cwrap("Z3_params_set_uint", "number", [number,number,number,number]),
          "params_set_double": Module.cwrap("Z3_params_set_double", "number", [number,number,number,number]),
          "params_set_symbol": Module.cwrap("Z3_params_set_symbol", "number", [number,number,number,number]),
          "params_to_string": Module.cwrap("Z3_params_to_string", "string", [number,number]),
          "params_validate": Module.cwrap("Z3_params_validate", "number", [number,number,number]),
          "param_descrs_inc_ref": Module.cwrap("Z3_param_descrs_inc_ref", "number", [number,number]),
          "param_descrs_dec_ref": Module.cwrap("Z3_param_descrs_dec_ref", "number", [number,number]),
          "param_descrs_get_kind": Module.cwrap("Z3_param_descrs_get_kind", "number", [number,number,number]),
          "param_descrs_size": Module.cwrap("Z3_param_descrs_size", "number", [number,number]),
          "param_descrs_get_name": Module.cwrap("Z3_param_descrs_get_name", "number", [number,number,number]),
          "param_descrs_get_documentation": Module.cwrap("Z3_param_descrs_get_documentation", "string", [number,number,number]),
          "param_descrs_to_string": Module.cwrap("Z3_param_descrs_to_string", "string", [number,number]),
          "mk_int_symbol": Module.cwrap("Z3_mk_int_symbol", "number", [number,number]),
          "mk_string_symbol": Module.cwrap("Z3_mk_string_symbol", "number", [number,string]),
          "mk_uninterpreted_sort": Module.cwrap("Z3_mk_uninterpreted_sort", "number", [number,number]),
          "mk_bool_sort": Module.cwrap("Z3_mk_bool_sort", "number", [number]),
          "mk_int_sort": Module.cwrap("Z3_mk_int_sort", "number", [number]),
          "mk_real_sort": Module.cwrap("Z3_mk_real_sort", "number", [number]),
          "mk_bv_sort": Module.cwrap("Z3_mk_bv_sort", "number", [number,number]),
          "mk_finite_domain_sort": Module.cwrap("Z3_mk_finite_domain_sort", "number", [number,number,number]),
          "mk_array_sort": Module.cwrap("Z3_mk_array_sort", "number", [number,number,number]),
          "mk_array_sort_n": Module.cwrap("Z3_mk_array_sort_n", "number", [number,number,number,number]),
          "mk_tuple_sort": Module.cwrap("Z3_mk_tuple_sort", "number", [number,number,number,number,number,number,number]),
          "mk_enumeration_sort": Module.cwrap("Z3_mk_enumeration_sort", "number", [number,number,number,number,number,number]),
          "mk_list_sort": Module.cwrap("Z3_mk_list_sort", "number", [number,number,number,number,number,number,number,number,number]),
          "mk_constructor": Module.cwrap("Z3_mk_constructor", "number", [number,number,number,number,number,number,number]),
          "del_constructor": Module.cwrap("Z3_del_constructor", "number", [number,number]),
          "mk_datatype": Module.cwrap("Z3_mk_datatype", "number", [number,number,number,number]),
          "mk_constructor_list": Module.cwrap("Z3_mk_constructor_list", "number", [number,number,number]),
          "del_constructor_list": Module.cwrap("Z3_del_constructor_list", "number", [number,number]),
          "mk_datatypes": Module.cwrap("Z3_mk_datatypes", "number", [number,number,number,number,number]),
          "query_constructor": Module.cwrap("Z3_query_constructor", "number", [number,number,number,number,number,number]),
          "mk_func_decl": Module.cwrap("Z3_mk_func_decl", "number", [number,number,number,number,number]),
          "mk_app": Module.cwrap("Z3_mk_app", "number", [number,number,number,number]),
          "mk_const": Module.cwrap("Z3_mk_const", "number", [number,number,number]),
          "mk_fresh_func_decl": Module.cwrap("Z3_mk_fresh_func_decl", "number", [number,string,number,number,number]),
          "mk_fresh_const": Module.cwrap("Z3_mk_fresh_const", "number", [number,string,number]),
          "mk_rec_func_decl": Module.cwrap("Z3_mk_rec_func_decl", "number", [number,number,number,number,number]),
          "add_rec_def": Module.cwrap("Z3_add_rec_def", "number", [number,number,number,number,number]),
          "mk_true": Module.cwrap("Z3_mk_true", "number", [number]),
          "mk_false": Module.cwrap("Z3_mk_false", "number", [number]),
          "mk_eq": Module.cwrap("Z3_mk_eq", "number", [number,number,number]),
          "mk_distinct": Module.cwrap("Z3_mk_distinct", "number", [number,number,number]),
          "mk_not": Module.cwrap("Z3_mk_not", "number", [number,number]),
          "mk_ite": Module.cwrap("Z3_mk_ite", "number", [number,number,number,number]),
          "mk_iff": Module.cwrap("Z3_mk_iff", "number", [number,number,number]),
          "mk_implies": Module.cwrap("Z3_mk_implies", "number", [number,number,number]),
          "mk_xor": Module.cwrap("Z3_mk_xor", "number", [number,number,number]),
          "mk_and": Module.cwrap("Z3_mk_and", "number", [number,number,number]),
          "mk_or": Module.cwrap("Z3_mk_or", "number", [number,number,number]),
          "mk_add": Module.cwrap("Z3_mk_add", "number", [number,number,number]),
          "mk_mul": Module.cwrap("Z3_mk_mul", "number", [number,number,number]),
          "mk_sub": Module.cwrap("Z3_mk_sub", "number", [number,number,number]),
          "mk_unary_minus": Module.cwrap("Z3_mk_unary_minus", "number", [number,number]),
          "mk_div": Module.cwrap("Z3_mk_div", "number", [number,number,number]),
          "mk_mod": Module.cwrap("Z3_mk_mod", "number", [number,number,number]),
          "mk_rem": Module.cwrap("Z3_mk_rem", "number", [number,number,number]),
          "mk_power": Module.cwrap("Z3_mk_power", "number", [number,number,number]),
          "mk_lt": Module.cwrap("Z3_mk_lt", "number", [number,number,number]),
          "mk_le": Module.cwrap("Z3_mk_le", "number", [number,number,number]),
          "mk_gt": Module.cwrap("Z3_mk_gt", "number", [number,number,number]),
          "mk_ge": Module.cwrap("Z3_mk_ge", "number", [number,number,number]),
          "mk_divides": Module.cwrap("Z3_mk_divides", "number", [number,number,number]),
          "mk_int2real": Module.cwrap("Z3_mk_int2real", "number", [number,number]),
          "mk_real2int": Module.cwrap("Z3_mk_real2int", "number", [number,number]),
          "mk_is_int": Module.cwrap("Z3_mk_is_int", "number", [number,number]),
          "mk_bvnot": Module.cwrap("Z3_mk_bvnot", "number", [number,number]),
          "mk_bvredand": Module.cwrap("Z3_mk_bvredand", "number", [number,number]),
          "mk_bvredor": Module.cwrap("Z3_mk_bvredor", "number", [number,number]),
          "mk_bvand": Module.cwrap("Z3_mk_bvand", "number", [number,number,number]),
          "mk_bvor": Module.cwrap("Z3_mk_bvor", "number", [number,number,number]),
          "mk_bvxor": Module.cwrap("Z3_mk_bvxor", "number", [number,number,number]),
          "mk_bvnand": Module.cwrap("Z3_mk_bvnand", "number", [number,number,number]),
          "mk_bvnor": Module.cwrap("Z3_mk_bvnor", "number", [number,number,number]),
          "mk_bvxnor": Module.cwrap("Z3_mk_bvxnor", "number", [number,number,number]),
          "mk_bvneg": Module.cwrap("Z3_mk_bvneg", "number", [number,number]),
          "mk_bvadd": Module.cwrap("Z3_mk_bvadd", "number", [number,number,number]),
          "mk_bvsub": Module.cwrap("Z3_mk_bvsub", "number", [number,number,number]),
          "mk_bvmul": Module.cwrap("Z3_mk_bvmul", "number", [number,number,number]),
          "mk_bvudiv": Module.cwrap("Z3_mk_bvudiv", "number", [number,number,number]),
          "mk_bvsdiv": Module.cwrap("Z3_mk_bvsdiv", "number", [number,number,number]),
          "mk_bvurem": Module.cwrap("Z3_mk_bvurem", "number", [number,number,number]),
          "mk_bvsrem": Module.cwrap("Z3_mk_bvsrem", "number", [number,number,number]),
          "mk_bvsmod": Module.cwrap("Z3_mk_bvsmod", "number", [number,number,number]),
          "mk_bvult": Module.cwrap("Z3_mk_bvult", "number", [number,number,number]),
          "mk_bvslt": Module.cwrap("Z3_mk_bvslt", "number", [number,number,number]),
          "mk_bvule": Module.cwrap("Z3_mk_bvule", "number", [number,number,number]),
          "mk_bvsle": Module.cwrap("Z3_mk_bvsle", "number", [number,number,number]),
          "mk_bvuge": Module.cwrap("Z3_mk_bvuge", "number", [number,number,number]),
          "mk_bvsge": Module.cwrap("Z3_mk_bvsge", "number", [number,number,number]),
          "mk_bvugt": Module.cwrap("Z3_mk_bvugt", "number", [number,number,number]),
          "mk_bvsgt": Module.cwrap("Z3_mk_bvsgt", "number", [number,number,number]),
          "mk_concat": Module.cwrap("Z3_mk_concat", "number", [number,number,number]),
          "mk_extract": Module.cwrap("Z3_mk_extract", "number", [number,number,number,number]),
          "mk_sign_ext": Module.cwrap("Z3_mk_sign_ext", "number", [number,number,number]),
          "mk_zero_ext": Module.cwrap("Z3_mk_zero_ext", "number", [number,number,number]),
          "mk_repeat": Module.cwrap("Z3_mk_repeat", "number", [number,number,number]),
          "mk_bvshl": Module.cwrap("Z3_mk_bvshl", "number", [number,number,number]),
          "mk_bvlshr": Module.cwrap("Z3_mk_bvlshr", "number", [number,number,number]),
          "mk_bvashr": Module.cwrap("Z3_mk_bvashr", "number", [number,number,number]),
          "mk_rotate_left": Module.cwrap("Z3_mk_rotate_left", "number", [number,number,number]),
          "mk_rotate_right": Module.cwrap("Z3_mk_rotate_right", "number", [number,number,number]),
          "mk_ext_rotate_left": Module.cwrap("Z3_mk_ext_rotate_left", "number", [number,number,number]),
          "mk_ext_rotate_right": Module.cwrap("Z3_mk_ext_rotate_right", "number", [number,number,number]),
          "mk_int2bv": Module.cwrap("Z3_mk_int2bv", "number", [number,number,number]),
          "mk_bv2int": Module.cwrap("Z3_mk_bv2int", "number", [number,number,number]),
          "mk_bvadd_no_overflow": Module.cwrap("Z3_mk_bvadd_no_overflow", "number", [number,number,number,number]),
          "mk_bvadd_no_underflow": Module.cwrap("Z3_mk_bvadd_no_underflow", "number", [number,number,number]),
          "mk_bvsub_no_overflow": Module.cwrap("Z3_mk_bvsub_no_overflow", "number", [number,number,number]),
          "mk_bvsub_no_underflow": Module.cwrap("Z3_mk_bvsub_no_underflow", "number", [number,number,number,number]),
          "mk_bvsdiv_no_overflow": Module.cwrap("Z3_mk_bvsdiv_no_overflow", "number", [number,number,number]),
          "mk_bvneg_no_overflow": Module.cwrap("Z3_mk_bvneg_no_overflow", "number", [number,number]),
          "mk_bvmul_no_overflow": Module.cwrap("Z3_mk_bvmul_no_overflow", "number", [number,number,number,number]),
          "mk_bvmul_no_underflow": Module.cwrap("Z3_mk_bvmul_no_underflow", "number", [number,number,number]),
          "mk_select": Module.cwrap("Z3_mk_select", "number", [number,number,number]),
          "mk_select_n": Module.cwrap("Z3_mk_select_n", "number", [number,number,number,number]),
          "mk_store": Module.cwrap("Z3_mk_store", "number", [number,number,number,number]),
          "mk_store_n": Module.cwrap("Z3_mk_store_n", "number", [number,number,number,number,number]),
          "mk_const_array": Module.cwrap("Z3_mk_const_array", "number", [number,number,number]),
          "mk_map": Module.cwrap("Z3_mk_map", "number", [number,number,number,number]),
          "mk_array_default": Module.cwrap("Z3_mk_array_default", "number", [number,number]),
          "mk_as_array": Module.cwrap("Z3_mk_as_array", "number", [number,number]),
          "mk_set_has_size": Module.cwrap("Z3_mk_set_has_size", "number", [number,number,number]),
          "mk_set_sort": Module.cwrap("Z3_mk_set_sort", "number", [number,number]),
          "mk_empty_set": Module.cwrap("Z3_mk_empty_set", "number", [number,number]),
          "mk_full_set": Module.cwrap("Z3_mk_full_set", "number", [number,number]),
          "mk_set_add": Module.cwrap("Z3_mk_set_add", "number", [number,number,number]),
          "mk_set_del": Module.cwrap("Z3_mk_set_del", "number", [number,number,number]),
          "mk_set_union": Module.cwrap("Z3_mk_set_union", "number", [number,number,number]),
          "mk_set_intersect": Module.cwrap("Z3_mk_set_intersect", "number", [number,number,number]),
          "mk_set_difference": Module.cwrap("Z3_mk_set_difference", "number", [number,number,number]),
          "mk_set_complement": Module.cwrap("Z3_mk_set_complement", "number", [number,number]),
          "mk_set_member": Module.cwrap("Z3_mk_set_member", "number", [number,number,number]),
          "mk_set_subset": Module.cwrap("Z3_mk_set_subset", "number", [number,number,number]),
          "mk_array_ext": Module.cwrap("Z3_mk_array_ext", "number", [number,number,number]),
          "mk_numeral": Module.cwrap("Z3_mk_numeral", "number", [number,string,number]),
          "mk_real": Module.cwrap("Z3_mk_real", "number", [number,number,number]),
          "mk_int": Module.cwrap("Z3_mk_int", "number", [number,number,number]),
          "mk_unsigned_int": Module.cwrap("Z3_mk_unsigned_int", "number", [number,number,number]),
          "mk_int64": Module.cwrap("Z3_mk_int64", "number", [number,number,number]),
          "mk_unsigned_int64": Module.cwrap("Z3_mk_unsigned_int64", "number", [number,number,number]),
          "mk_bv_numeral": Module.cwrap("Z3_mk_bv_numeral", "number", [number,number,number]),
          "mk_seq_sort": Module.cwrap("Z3_mk_seq_sort", "number", [number,number]),
          "is_seq_sort": Module.cwrap("Z3_is_seq_sort", "number", [number,number]),
          "get_seq_sort_basis": Module.cwrap("Z3_get_seq_sort_basis", "number", [number,number]),
          "mk_re_sort": Module.cwrap("Z3_mk_re_sort", "number", [number,number]),
          "is_re_sort": Module.cwrap("Z3_is_re_sort", "number", [number,number]),
          "get_re_sort_basis": Module.cwrap("Z3_get_re_sort_basis", "number", [number,number]),
          "mk_string_sort": Module.cwrap("Z3_mk_string_sort", "number", [number]),
          "is_string_sort": Module.cwrap("Z3_is_string_sort", "number", [number,number]),
          "mk_string": Module.cwrap("Z3_mk_string", "number", [number,string]),
          "mk_lstring": Module.cwrap("Z3_mk_lstring", "number", [number,number,string]),
          "is_string": Module.cwrap("Z3_is_string", "number", [number,number]),
          "get_string": Module.cwrap("Z3_get_string", "string", [number,number]),
          "get_lstring": Module.cwrap("Z3_get_lstring", "number", [number,number,number]),
          "mk_seq_empty": Module.cwrap("Z3_mk_seq_empty", "number", [number,number]),
          "mk_seq_unit": Module.cwrap("Z3_mk_seq_unit", "number", [number,number]),
          "mk_seq_concat": Module.cwrap("Z3_mk_seq_concat", "number", [number,number,number]),
          "mk_seq_prefix": Module.cwrap("Z3_mk_seq_prefix", "number", [number,number,number]),
          "mk_seq_suffix": Module.cwrap("Z3_mk_seq_suffix", "number", [number,number,number]),
          "mk_seq_contains": Module.cwrap("Z3_mk_seq_contains", "number", [number,number,number]),
          "mk_str_lt": Module.cwrap("Z3_mk_str_lt", "number", [number,number,number]),
          "mk_str_le": Module.cwrap("Z3_mk_str_le", "number", [number,number,number]),
          "mk_seq_extract": Module.cwrap("Z3_mk_seq_extract", "number", [number,number,number,number]),
          "mk_seq_replace": Module.cwrap("Z3_mk_seq_replace", "number", [number,number,number,number]),
          "mk_seq_at": Module.cwrap("Z3_mk_seq_at", "number", [number,number,number]),
          "mk_seq_nth": Module.cwrap("Z3_mk_seq_nth", "number", [number,number,number]),
          "mk_seq_length": Module.cwrap("Z3_mk_seq_length", "number", [number,number]),
          "mk_seq_index": Module.cwrap("Z3_mk_seq_index", "number", [number,number,number,number]),
          "mk_seq_last_index": Module.cwrap("Z3_mk_seq_last_index", "number", [number,number,number]),
          "mk_str_to_int": Module.cwrap("Z3_mk_str_to_int", "number", [number,number]),
          "mk_int_to_str": Module.cwrap("Z3_mk_int_to_str", "number", [number,number]),
          "mk_seq_to_re": Module.cwrap("Z3_mk_seq_to_re", "number", [number,number]),
          "mk_seq_in_re": Module.cwrap("Z3_mk_seq_in_re", "number", [number,number,number]),
          "mk_re_plus": Module.cwrap("Z3_mk_re_plus", "number", [number,number]),
          "mk_re_star": Module.cwrap("Z3_mk_re_star", "number", [number,number]),
          "mk_re_option": Module.cwrap("Z3_mk_re_option", "number", [number,number]),
          "mk_re_union": Module.cwrap("Z3_mk_re_union", "number", [number,number,number]),
          "mk_re_concat": Module.cwrap("Z3_mk_re_concat", "number", [number,number,number]),
          "mk_re_range": Module.cwrap("Z3_mk_re_range", "number", [number,number,number]),
          "mk_re_loop": Module.cwrap("Z3_mk_re_loop", "number", [number,number,number,number]),
          "mk_re_intersect": Module.cwrap("Z3_mk_re_intersect", "number", [number,number,number]),
          "mk_re_complement": Module.cwrap("Z3_mk_re_complement", "number", [number,number]),
          "mk_re_empty": Module.cwrap("Z3_mk_re_empty", "number", [number,number]),
          "mk_re_full": Module.cwrap("Z3_mk_re_full", "number", [number,number]),
          "mk_linear_order": Module.cwrap("Z3_mk_linear_order", "number", [number,number,number]),
          "mk_partial_order": Module.cwrap("Z3_mk_partial_order", "number", [number,number,number]),
          "mk_piecewise_linear_order": Module.cwrap("Z3_mk_piecewise_linear_order", "number", [number,number,number]),
          "mk_tree_order": Module.cwrap("Z3_mk_tree_order", "number", [number,number,number]),
          "mk_transitive_closure": Module.cwrap("Z3_mk_transitive_closure", "number", [number,number]),
          "mk_pattern": Module.cwrap("Z3_mk_pattern", "number", [number,number,number]),
          "mk_bound": Module.cwrap("Z3_mk_bound", "number", [number,number,number]),
          "mk_forall": Module.cwrap("Z3_mk_forall", "number", [number,number,number,number,number,number,number,number]),
          "mk_exists": Module.cwrap("Z3_mk_exists", "number", [number,number,number,number,number,number,number,number]),
          "mk_quantifier": Module.cwrap("Z3_mk_quantifier", "number", [number,number,number,number,number,number,number,number,number]),
          "mk_quantifier_ex": Module.cwrap("Z3_mk_quantifier_ex", "number", [number,number,number,number,number,number,number,number,number,number,number,number,number]),
          "mk_forall_const": Module.cwrap("Z3_mk_forall_const", "number", [number,number,number,number,number,number,number]),
          "mk_exists_const": Module.cwrap("Z3_mk_exists_const", "number", [number,number,number,number,number,number,number]),
          "mk_quantifier_const": Module.cwrap("Z3_mk_quantifier_const", "number", [number,number,number,number,number,number,number,number]),
          "mk_quantifier_const_ex": Module.cwrap("Z3_mk_quantifier_const_ex", "number", [number,number,number,number,number,number,number,number,number,number,number,number]),
          "mk_lambda": Module.cwrap("Z3_mk_lambda", "number", [number,number,number,number,number]),
          "mk_lambda_const": Module.cwrap("Z3_mk_lambda_const", "number", [number,number,number,number]),
          "get_symbol_kind": Module.cwrap("Z3_get_symbol_kind", "number", [number,number]),
          "get_symbol_int": Module.cwrap("Z3_get_symbol_int", "number", [number,number]),
          "get_symbol_string": Module.cwrap("Z3_get_symbol_string", "string", [number,number]),
          "get_sort_name": Module.cwrap("Z3_get_sort_name", "number", [number,number]),
          "get_sort_id": Module.cwrap("Z3_get_sort_id", "number", [number,number]),
          "sort_to_ast": Module.cwrap("Z3_sort_to_ast", "number", [number,number]),
          "is_eq_sort": Module.cwrap("Z3_is_eq_sort", "number", [number,number,number]),
          "get_sort_kind": Module.cwrap("Z3_get_sort_kind", "number", [number,number]),
          "get_bv_sort_size": Module.cwrap("Z3_get_bv_sort_size", "number", [number,number]),
          "get_finite_domain_sort_size": Module.cwrap("Z3_get_finite_domain_sort_size", "number", [number,number,number]),
          "get_array_sort_domain": Module.cwrap("Z3_get_array_sort_domain", "number", [number,number]),
          "get_array_sort_range": Module.cwrap("Z3_get_array_sort_range", "number", [number,number]),
          "get_tuple_sort_mk_decl": Module.cwrap("Z3_get_tuple_sort_mk_decl", "number", [number,number]),
          "get_tuple_sort_num_fields": Module.cwrap("Z3_get_tuple_sort_num_fields", "number", [number,number]),
          "get_tuple_sort_field_decl": Module.cwrap("Z3_get_tuple_sort_field_decl", "number", [number,number,number]),
          "get_datatype_sort_num_constructors": Module.cwrap("Z3_get_datatype_sort_num_constructors", "number", [number,number]),
          "get_datatype_sort_constructor": Module.cwrap("Z3_get_datatype_sort_constructor", "number", [number,number,number]),
          "get_datatype_sort_recognizer": Module.cwrap("Z3_get_datatype_sort_recognizer", "number", [number,number,number]),
          "get_datatype_sort_constructor_accessor": Module.cwrap("Z3_get_datatype_sort_constructor_accessor", "number", [number,number,number,number]),
          "datatype_update_field": Module.cwrap("Z3_datatype_update_field", "number", [number,number,number,number]),
          "get_relation_arity": Module.cwrap("Z3_get_relation_arity", "number", [number,number]),
          "get_relation_column": Module.cwrap("Z3_get_relation_column", "number", [number,number,number]),
          "mk_atmost": Module.cwrap("Z3_mk_atmost", "number", [number,number,number,number]),
          "mk_atleast": Module.cwrap("Z3_mk_atleast", "number", [number,number,number,number]),
          "mk_pble": Module.cwrap("Z3_mk_pble", "number", [number,number,number,number,number]),
          "mk_pbge": Module.cwrap("Z3_mk_pbge", "number", [number,number,number,number,number]),
          "mk_pbeq": Module.cwrap("Z3_mk_pbeq", "number", [number,number,number,number,number]),
          "func_decl_to_ast": Module.cwrap("Z3_func_decl_to_ast", "number", [number,number]),
          "is_eq_func_decl": Module.cwrap("Z3_is_eq_func_decl", "number", [number,number,number]),
          "get_func_decl_id": Module.cwrap("Z3_get_func_decl_id", "number", [number,number]),
          "get_decl_name": Module.cwrap("Z3_get_decl_name", "number", [number,number]),
          "get_decl_kind": Module.cwrap("Z3_get_decl_kind", "number", [number,number]),
          "get_domain_size": Module.cwrap("Z3_get_domain_size", "number", [number,number]),
          "get_arity": Module.cwrap("Z3_get_arity", "number", [number,number]),
          "get_domain": Module.cwrap("Z3_get_domain", "number", [number,number,number]),
          "get_range": Module.cwrap("Z3_get_range", "number", [number,number]),
          "get_decl_num_parameters": Module.cwrap("Z3_get_decl_num_parameters", "number", [number,number]),
          "get_decl_parameter_kind": Module.cwrap("Z3_get_decl_parameter_kind", "number", [number,number,number]),
          "get_decl_int_parameter": Module.cwrap("Z3_get_decl_int_parameter", "number", [number,number,number]),
          "get_decl_double_parameter": Module.cwrap("Z3_get_decl_double_parameter", "number", [number,number,number]),
          "get_decl_symbol_parameter": Module.cwrap("Z3_get_decl_symbol_parameter", "number", [number,number,number]),
          "get_decl_sort_parameter": Module.cwrap("Z3_get_decl_sort_parameter", "number", [number,number,number]),
          "get_decl_ast_parameter": Module.cwrap("Z3_get_decl_ast_parameter", "number", [number,number,number]),
          "get_decl_func_decl_parameter": Module.cwrap("Z3_get_decl_func_decl_parameter", "number", [number,number,number]),
          "get_decl_rational_parameter": Module.cwrap("Z3_get_decl_rational_parameter", "string", [number,number,number]),
          "app_to_ast": Module.cwrap("Z3_app_to_ast", "number", [number,number]),
          "get_app_decl": Module.cwrap("Z3_get_app_decl", "number", [number,number]),
          "get_app_num_args": Module.cwrap("Z3_get_app_num_args", "number", [number,number]),
          "get_app_arg": Module.cwrap("Z3_get_app_arg", "number", [number,number,number]),
          "is_eq_ast": Module.cwrap("Z3_is_eq_ast", "number", [number,number,number]),
          "get_ast_id": Module.cwrap("Z3_get_ast_id", "number", [number,number]),
          "get_ast_hash": Module.cwrap("Z3_get_ast_hash", "number", [number,number]),
          "get_sort": Module.cwrap("Z3_get_sort", "number", [number,number]),
          "is_well_sorted": Module.cwrap("Z3_is_well_sorted", "number", [number,number]),
          "get_bool_value": Module.cwrap("Z3_get_bool_value", "number", [number,number]),
          "get_ast_kind": Module.cwrap("Z3_get_ast_kind", "number", [number,number]),
          "is_app": Module.cwrap("Z3_is_app", "number", [number,number]),
          "is_numeral_ast": Module.cwrap("Z3_is_numeral_ast", "number", [number,number]),
          "is_algebraic_number": Module.cwrap("Z3_is_algebraic_number", "number", [number,number]),
          "to_app": Module.cwrap("Z3_to_app", "number", [number,number]),
          "to_func_decl": Module.cwrap("Z3_to_func_decl", "number", [number,number]),
          "get_numeral_string": Module.cwrap("Z3_get_numeral_string", "string", [number,number]),
          "get_numeral_binary_string": Module.cwrap("Z3_get_numeral_binary_string", "string", [number,number]),
          "get_numeral_decimal_string": Module.cwrap("Z3_get_numeral_decimal_string", "string", [number,number,number]),
          "get_numeral_double": Module.cwrap("Z3_get_numeral_double", "number", [number,number]),
          "get_numerator": Module.cwrap("Z3_get_numerator", "number", [number,number]),
          "get_denominator": Module.cwrap("Z3_get_denominator", "number", [number,number]),
          "get_numeral_small": Module.cwrap("Z3_get_numeral_small", "number", [number,number,number,number]),
          "get_numeral_int": Module.cwrap("Z3_get_numeral_int", "number", [number,number,number]),
          "get_numeral_uint": Module.cwrap("Z3_get_numeral_uint", "number", [number,number,number]),
          "get_numeral_uint64": Module.cwrap("Z3_get_numeral_uint64", "number", [number,number,number]),
          "get_numeral_int64": Module.cwrap("Z3_get_numeral_int64", "number", [number,number,number]),
          "get_numeral_rational_int64": Module.cwrap("Z3_get_numeral_rational_int64", "number", [number,number,number,number]),
          "get_algebraic_number_lower": Module.cwrap("Z3_get_algebraic_number_lower", "number", [number,number,number]),
          "get_algebraic_number_upper": Module.cwrap("Z3_get_algebraic_number_upper", "number", [number,number,number]),
          "pattern_to_ast": Module.cwrap("Z3_pattern_to_ast", "number", [number,number]),
          "get_pattern_num_terms": Module.cwrap("Z3_get_pattern_num_terms", "number", [number,number]),
          "get_pattern": Module.cwrap("Z3_get_pattern", "number", [number,number,number]),
          "get_index_value": Module.cwrap("Z3_get_index_value", "number", [number,number]),
          "is_quantifier_forall": Module.cwrap("Z3_is_quantifier_forall", "number", [number,number]),
          "is_quantifier_exists": Module.cwrap("Z3_is_quantifier_exists", "number", [number,number]),
          "is_lambda": Module.cwrap("Z3_is_lambda", "number", [number,number]),
          "get_quantifier_weight": Module.cwrap("Z3_get_quantifier_weight", "number", [number,number]),
          "get_quantifier_num_patterns": Module.cwrap("Z3_get_quantifier_num_patterns", "number", [number,number]),
          "get_quantifier_pattern_ast": Module.cwrap("Z3_get_quantifier_pattern_ast", "number", [number,number,number]),
          "get_quantifier_num_no_patterns": Module.cwrap("Z3_get_quantifier_num_no_patterns", "number", [number,number]),
          "get_quantifier_no_pattern_ast": Module.cwrap("Z3_get_quantifier_no_pattern_ast", "number", [number,number,number]),
          "get_quantifier_num_bound": Module.cwrap("Z3_get_quantifier_num_bound", "number", [number,number]),
          "get_quantifier_bound_name": Module.cwrap("Z3_get_quantifier_bound_name", "number", [number,number,number]),
          "get_quantifier_bound_sort": Module.cwrap("Z3_get_quantifier_bound_sort", "number", [number,number,number]),
          "get_quantifier_body": Module.cwrap("Z3_get_quantifier_body", "number", [number,number]),
          "simplify": Module.cwrap("Z3_simplify", "number", [number,number]),
          "simplify_ex": Module.cwrap("Z3_simplify_ex", "number", [number,number,number]),
          "simplify_get_help": Module.cwrap("Z3_simplify_get_help", "string", [number]),
          "simplify_get_param_descrs": Module.cwrap("Z3_simplify_get_param_descrs", "number", [number]),
          "update_term": Module.cwrap("Z3_update_term", "number", [number,number,number,number]),
          "substitute": Module.cwrap("Z3_substitute", "number", [number,number,number,number,number]),
          "substitute_vars": Module.cwrap("Z3_substitute_vars", "number", [number,number,number,number]),
          "translate": Module.cwrap("Z3_translate", "number", [number,number,number]),
          "mk_model": Module.cwrap("Z3_mk_model", "number", [number]),
          "model_inc_ref": Module.cwrap("Z3_model_inc_ref", "number", [number,number]),
          "model_dec_ref": Module.cwrap("Z3_model_dec_ref", "number", [number,number]),
          "model_eval": Module.cwrap("Z3_model_eval", "number", [number,number,number,number,number]),
          "model_get_const_interp": Module.cwrap("Z3_model_get_const_interp", "number", [number,number,number]),
          "model_has_interp": Module.cwrap("Z3_model_has_interp", "number", [number,number,number]),
          "model_get_func_interp": Module.cwrap("Z3_model_get_func_interp", "number", [number,number,number]),
          "model_get_num_consts": Module.cwrap("Z3_model_get_num_consts", "number", [number,number]),
          "model_get_const_decl": Module.cwrap("Z3_model_get_const_decl", "number", [number,number,number]),
          "model_get_num_funcs": Module.cwrap("Z3_model_get_num_funcs", "number", [number,number]),
          "model_get_func_decl": Module.cwrap("Z3_model_get_func_decl", "number", [number,number,number]),
          "model_get_num_sorts": Module.cwrap("Z3_model_get_num_sorts", "number", [number,number]),
          "model_get_sort": Module.cwrap("Z3_model_get_sort", "number", [number,number,number]),
          "model_get_sort_universe": Module.cwrap("Z3_model_get_sort_universe", "number", [number,number,number]),
          "model_translate": Module.cwrap("Z3_model_translate", "number", [number,number,number]),
          "is_as_array": Module.cwrap("Z3_is_as_array", "number", [number,number]),
          "get_as_array_func_decl": Module.cwrap("Z3_get_as_array_func_decl", "number", [number,number]),
          "add_func_interp": Module.cwrap("Z3_add_func_interp", "number", [number,number,number,number]),
          "add_const_interp": Module.cwrap("Z3_add_const_interp", "number", [number,number,number,number]),
          "func_interp_inc_ref": Module.cwrap("Z3_func_interp_inc_ref", "number", [number,number]),
          "func_interp_dec_ref": Module.cwrap("Z3_func_interp_dec_ref", "number", [number,number]),
          "func_interp_get_num_entries": Module.cwrap("Z3_func_interp_get_num_entries", "number", [number,number]),
          "func_interp_get_entry": Module.cwrap("Z3_func_interp_get_entry", "number", [number,number,number]),
          "func_interp_get_else": Module.cwrap("Z3_func_interp_get_else", "number", [number,number]),
          "func_interp_set_else": Module.cwrap("Z3_func_interp_set_else", "number", [number,number,number]),
          "func_interp_get_arity": Module.cwrap("Z3_func_interp_get_arity", "number", [number,number]),
          "func_interp_add_entry": Module.cwrap("Z3_func_interp_add_entry", "number", [number,number,number,number]),
          "func_entry_inc_ref": Module.cwrap("Z3_func_entry_inc_ref", "number", [number,number]),
          "func_entry_dec_ref": Module.cwrap("Z3_func_entry_dec_ref", "number", [number,number]),
          "func_entry_get_value": Module.cwrap("Z3_func_entry_get_value", "number", [number,number]),
          "func_entry_get_num_args": Module.cwrap("Z3_func_entry_get_num_args", "number", [number,number]),
          "func_entry_get_arg": Module.cwrap("Z3_func_entry_get_arg", "number", [number,number,number]),
          "open_log": Module.cwrap("Z3_open_log", "number", [string]),
          "append_log": Module.cwrap("Z3_append_log", "number", [string]),
          "close_log": Module.cwrap("Z3_close_log", "number", []),
          "toggle_warning_messages": Module.cwrap("Z3_toggle_warning_messages", "number", [number]),
          "set_ast_print_mode": Module.cwrap("Z3_set_ast_print_mode", "number", [number,number]),
          "ast_to_string": Module.cwrap("Z3_ast_to_string", "string", [number,number]),
          "pattern_to_string": Module.cwrap("Z3_pattern_to_string", "string", [number,number]),
          "sort_to_string": Module.cwrap("Z3_sort_to_string", "string", [number,number]),
          "func_decl_to_string": Module.cwrap("Z3_func_decl_to_string", "string", [number,number]),
          "model_to_string": Module.cwrap("Z3_model_to_string", "string", [number,number]),
          "benchmark_to_smtlib_string": Module.cwrap("Z3_benchmark_to_smtlib_string", "string", [number,string,string,string,string,number,number,number]),
          "parse_smtlib2_string": Module.cwrap("Z3_parse_smtlib2_string", "number", [number,string,number,number,number,number,number,number]),
          "parse_smtlib2_file": Module.cwrap("Z3_parse_smtlib2_file", "number", [number,string,number,number,number,number,number,number]),
          "eval_smtlib2_string": Module.cwrap("Z3_eval_smtlib2_string", "string", [number,string]),
          "get_error_code": Module.cwrap("Z3_get_error_code", "number", [number]),
          "set_error_handler": Module.cwrap("Z3_set_error_handler", "number", [number,number]),
          "set_error": Module.cwrap("Z3_set_error", "number", [number,number]),
          "get_error_msg": Module.cwrap("Z3_get_error_msg", "string", [number,number]),
          "get_version": Module.cwrap("Z3_get_version", "number", [number,number,number,number]),
          "get_full_version": Module.cwrap("Z3_get_full_version", "string", []),
          "enable_trace": Module.cwrap("Z3_enable_trace", "number", [string]),
          "disable_trace": Module.cwrap("Z3_disable_trace", "number", [string]),
          "reset_memory": Module.cwrap("Z3_reset_memory", "number", []),
          "finalize_memory": Module.cwrap("Z3_finalize_memory", "number", []),
          "mk_goal": Module.cwrap("Z3_mk_goal", "number", [number,number,number,number]),
          "goal_inc_ref": Module.cwrap("Z3_goal_inc_ref", "number", [number,number]),
          "goal_dec_ref": Module.cwrap("Z3_goal_dec_ref", "number", [number,number]),
          "goal_precision": Module.cwrap("Z3_goal_precision", "number", [number,number]),
          "goal_assert": Module.cwrap("Z3_goal_assert", "number", [number,number,number]),
          "goal_inconsistent": Module.cwrap("Z3_goal_inconsistent", "number", [number,number]),
          "goal_depth": Module.cwrap("Z3_goal_depth", "number", [number,number]),
          "goal_reset": Module.cwrap("Z3_goal_reset", "number", [number,number]),
          "goal_size": Module.cwrap("Z3_goal_size", "number", [number,number]),
          "goal_formula": Module.cwrap("Z3_goal_formula", "number", [number,number,number]),
          "goal_num_exprs": Module.cwrap("Z3_goal_num_exprs", "number", [number,number]),
          "goal_is_decided_sat": Module.cwrap("Z3_goal_is_decided_sat", "number", [number,number]),
          "goal_is_decided_unsat": Module.cwrap("Z3_goal_is_decided_unsat", "number", [number,number]),
          "goal_translate": Module.cwrap("Z3_goal_translate", "number", [number,number,number]),
          "goal_convert_model": Module.cwrap("Z3_goal_convert_model", "number", [number,number,number]),
          "goal_to_string": Module.cwrap("Z3_goal_to_string", "string", [number,number]),
          "goal_to_dimacs_string": Module.cwrap("Z3_goal_to_dimacs_string", "string", [number,number,number]),
          "mk_tactic": Module.cwrap("Z3_mk_tactic", "number", [number,string]),
          "tactic_inc_ref": Module.cwrap("Z3_tactic_inc_ref", "number", [number,number]),
          "tactic_dec_ref": Module.cwrap("Z3_tactic_dec_ref", "number", [number,number]),
          "mk_probe": Module.cwrap("Z3_mk_probe", "number", [number,string]),
          "probe_inc_ref": Module.cwrap("Z3_probe_inc_ref", "number", [number,number]),
          "probe_dec_ref": Module.cwrap("Z3_probe_dec_ref", "number", [number,number]),
          "tactic_and_then": Module.cwrap("Z3_tactic_and_then", "number", [number,number,number]),
          "tactic_or_else": Module.cwrap("Z3_tactic_or_else", "number", [number,number,number]),
          "tactic_par_or": Module.cwrap("Z3_tactic_par_or", "number", [number,number,number]),
          "tactic_par_and_then": Module.cwrap("Z3_tactic_par_and_then", "number", [number,number,number]),
          "tactic_try_for": Module.cwrap("Z3_tactic_try_for", "number", [number,number,number]),
          "tactic_when": Module.cwrap("Z3_tactic_when", "number", [number,number,number]),
          "tactic_cond": Module.cwrap("Z3_tactic_cond", "number", [number,number,number,number]),
          "tactic_repeat": Module.cwrap("Z3_tactic_repeat", "number", [number,number,number]),
          "tactic_skip": Module.cwrap("Z3_tactic_skip", "number", [number]),
          "tactic_fail": Module.cwrap("Z3_tactic_fail", "number", [number]),
          "tactic_fail_if": Module.cwrap("Z3_tactic_fail_if", "number", [number,number]),
          "tactic_fail_if_not_decided": Module.cwrap("Z3_tactic_fail_if_not_decided", "number", [number]),
          "tactic_using_params": Module.cwrap("Z3_tactic_using_params", "number", [number,number,number]),
          "probe_const": Module.cwrap("Z3_probe_const", "number", [number,number]),
          "probe_lt": Module.cwrap("Z3_probe_lt", "number", [number,number,number]),
          "probe_gt": Module.cwrap("Z3_probe_gt", "number", [number,number,number]),
          "probe_le": Module.cwrap("Z3_probe_le", "number", [number,number,number]),
          "probe_ge": Module.cwrap("Z3_probe_ge", "number", [number,number,number]),
          "probe_eq": Module.cwrap("Z3_probe_eq", "number", [number,number,number]),
          "probe_and": Module.cwrap("Z3_probe_and", "number", [number,number,number]),
          "probe_or": Module.cwrap("Z3_probe_or", "number", [number,number,number]),
          "probe_not": Module.cwrap("Z3_probe_not", "number", [number,number]),
          "get_num_tactics": Module.cwrap("Z3_get_num_tactics", "number", [number]),
          "get_tactic_name": Module.cwrap("Z3_get_tactic_name", "string", [number,number]),
          "get_num_probes": Module.cwrap("Z3_get_num_probes", "number", [number]),
          "get_probe_name": Module.cwrap("Z3_get_probe_name", "string", [number,number]),
          "tactic_get_help": Module.cwrap("Z3_tactic_get_help", "string", [number,number]),
          "tactic_get_param_descrs": Module.cwrap("Z3_tactic_get_param_descrs", "number", [number,number]),
          "tactic_get_descr": Module.cwrap("Z3_tactic_get_descr", "string", [number,string]),
          "probe_get_descr": Module.cwrap("Z3_probe_get_descr", "string", [number,string]),
          "probe_apply": Module.cwrap("Z3_probe_apply", "number", [number,number,number]),
          "tactic_apply": Module.cwrap("Z3_tactic_apply", "number", [number,number,number]),
          "tactic_apply_ex": Module.cwrap("Z3_tactic_apply_ex", "number", [number,number,number,number]),
          "apply_result_inc_ref": Module.cwrap("Z3_apply_result_inc_ref", "number", [number,number]),
          "apply_result_dec_ref": Module.cwrap("Z3_apply_result_dec_ref", "number", [number,number]),
          "apply_result_to_string": Module.cwrap("Z3_apply_result_to_string", "string", [number,number]),
          "apply_result_get_num_subgoals": Module.cwrap("Z3_apply_result_get_num_subgoals", "number", [number,number]),
          "apply_result_get_subgoal": Module.cwrap("Z3_apply_result_get_subgoal", "number", [number,number,number]),
          "mk_solver": Module.cwrap("Z3_mk_solver", "number", [number]),
          "mk_simple_solver": Module.cwrap("Z3_mk_simple_solver", "number", [number]),
          "mk_solver_for_logic": Module.cwrap("Z3_mk_solver_for_logic", "number", [number,number]),
          "mk_solver_from_tactic": Module.cwrap("Z3_mk_solver_from_tactic", "number", [number,number]),
          "solver_translate": Module.cwrap("Z3_solver_translate", "number", [number,number,number]),
          "solver_import_model_converter": Module.cwrap("Z3_solver_import_model_converter", "number", [number,number,number]),
          "solver_get_help": Module.cwrap("Z3_solver_get_help", "string", [number,number]),
          "solver_get_param_descrs": Module.cwrap("Z3_solver_get_param_descrs", "number", [number,number]),
          "solver_set_params": Module.cwrap("Z3_solver_set_params", "number", [number,number,number]),
          "solver_inc_ref": Module.cwrap("Z3_solver_inc_ref", "number", [number,number]),
          "solver_dec_ref": Module.cwrap("Z3_solver_dec_ref", "number", [number,number]),
          "solver_interrupt": Module.cwrap("Z3_solver_interrupt", "number", [number,number]),
          "solver_push": Module.cwrap("Z3_solver_push", "number", [number,number]),
          "solver_pop": Module.cwrap("Z3_solver_pop", "number", [number,number,number]),
          "solver_reset": Module.cwrap("Z3_solver_reset", "number", [number,number]),
          "solver_get_num_scopes": Module.cwrap("Z3_solver_get_num_scopes", "number", [number,number]),
          "solver_assert": Module.cwrap("Z3_solver_assert", "number", [number,number,number]),
          "solver_assert_and_track": Module.cwrap("Z3_solver_assert_and_track", "number", [number,number,number,number]),
          "solver_from_file": Module.cwrap("Z3_solver_from_file", "number", [number,number,string]),
          "solver_from_string": Module.cwrap("Z3_solver_from_string", "number", [number,number,string]),
          "solver_get_assertions": Module.cwrap("Z3_solver_get_assertions", "number", [number,number]),
          "solver_get_units": Module.cwrap("Z3_solver_get_units", "number", [number,number]),
          "solver_get_trail": Module.cwrap("Z3_solver_get_trail", "number", [number,number]),
          "solver_get_non_units": Module.cwrap("Z3_solver_get_non_units", "number", [number,number]),
          "solver_get_levels": Module.cwrap("Z3_solver_get_levels", "number", [number,number,number,number,number]),
          "solver_propagate_init": Module.cwrap("Z3_solver_propagate_init", "number", [number,number,number,number,number,number]),
          "solver_propagate_fixed": Module.cwrap("Z3_solver_propagate_fixed", "number", [number,number,number]),
          "solver_propagate_final": Module.cwrap("Z3_solver_propagate_final", "number", [number,number,number]),
          "solver_propagate_eq": Module.cwrap("Z3_solver_propagate_eq", "number", [number,number,number]),
          "solver_propagate_diseq": Module.cwrap("Z3_solver_propagate_diseq", "number", [number,number,number]),
          "solver_propagate_register": Module.cwrap("Z3_solver_propagate_register", "number", [number,number,number]),
          "solver_propagate_consequence": Module.cwrap("Z3_solver_propagate_consequence", "number", [number,number,number,number,number,number,number,number]),
          "solver_check": Module.cwrap("Z3_solver_check", "number", [number,number]),
          "solver_check_assumptions": Module.cwrap("Z3_solver_check_assumptions", "number", [number,number,number,number]),
          "get_implied_equalities": Module.cwrap("Z3_get_implied_equalities", "number", [number,number,number,number,number]),
          "solver_get_consequences": Module.cwrap("Z3_solver_get_consequences", "number", [number,number,number,number,number]),
          "solver_cube": Module.cwrap("Z3_solver_cube", "number", [number,number,number,number]),
          "solver_get_model": Module.cwrap("Z3_solver_get_model", "number", [number,number]),
          "solver_get_proof": Module.cwrap("Z3_solver_get_proof", "number", [number,number]),
          "solver_get_unsat_core": Module.cwrap("Z3_solver_get_unsat_core", "number", [number,number]),
          "solver_get_reason_unknown": Module.cwrap("Z3_solver_get_reason_unknown", "string", [number,number]),
          "solver_get_statistics": Module.cwrap("Z3_solver_get_statistics", "number", [number,number]),
          "solver_to_string": Module.cwrap("Z3_solver_to_string", "string", [number,number]),
          "solver_to_dimacs_string": Module.cwrap("Z3_solver_to_dimacs_string", "string", [number,number,number]),
          "stats_to_string": Module.cwrap("Z3_stats_to_string", "string", [number,number]),
          "stats_inc_ref": Module.cwrap("Z3_stats_inc_ref", "number", [number,number]),
          "stats_dec_ref": Module.cwrap("Z3_stats_dec_ref", "number", [number,number]),
          "stats_size": Module.cwrap("Z3_stats_size", "number", [number,number]),
          "stats_get_key": Module.cwrap("Z3_stats_get_key", "string", [number,number,number]),
          "stats_is_uint": Module.cwrap("Z3_stats_is_uint", "number", [number,number,number]),
          "stats_is_double": Module.cwrap("Z3_stats_is_double", "number", [number,number,number]),
          "stats_get_uint_value": Module.cwrap("Z3_stats_get_uint_value", "number", [number,number,number]),
          "stats_get_double_value": Module.cwrap("Z3_stats_get_double_value", "number", [number,number,number]),
          "get_estimated_alloc_size": Module.cwrap("Z3_get_estimated_alloc_size", "number", []),
          "mk_ast_vector": Module.cwrap("Z3_mk_ast_vector", "number", [number]),
          "ast_vector_inc_ref": Module.cwrap("Z3_ast_vector_inc_ref", "number", [number,number]),
          "ast_vector_dec_ref": Module.cwrap("Z3_ast_vector_dec_ref", "number", [number,number]),
          "ast_vector_size": Module.cwrap("Z3_ast_vector_size", "number", [number,number]),
          "ast_vector_get": Module.cwrap("Z3_ast_vector_get", "number", [number,number,number]),
          "ast_vector_set": Module.cwrap("Z3_ast_vector_set", "number", [number,number,number,number]),
          "ast_vector_resize": Module.cwrap("Z3_ast_vector_resize", "number", [number,number,number]),
          "ast_vector_push": Module.cwrap("Z3_ast_vector_push", "number", [number,number,number]),
          "ast_vector_translate": Module.cwrap("Z3_ast_vector_translate", "number", [number,number,number]),
          "ast_vector_to_string": Module.cwrap("Z3_ast_vector_to_string", "string", [number,number]),
          "mk_ast_map": Module.cwrap("Z3_mk_ast_map", "number", [number]),
          "ast_map_inc_ref": Module.cwrap("Z3_ast_map_inc_ref", "number", [number,number]),
          "ast_map_dec_ref": Module.cwrap("Z3_ast_map_dec_ref", "number", [number,number]),
          "ast_map_contains": Module.cwrap("Z3_ast_map_contains", "number", [number,number,number]),
          "ast_map_find": Module.cwrap("Z3_ast_map_find", "number", [number,number,number]),
          "ast_map_insert": Module.cwrap("Z3_ast_map_insert", "number", [number,number,number,number]),
          "ast_map_erase": Module.cwrap("Z3_ast_map_erase", "number", [number,number,number]),
          "ast_map_reset": Module.cwrap("Z3_ast_map_reset", "number", [number,number]),
          "ast_map_size": Module.cwrap("Z3_ast_map_size", "number", [number,number]),
          "ast_map_keys": Module.cwrap("Z3_ast_map_keys", "number", [number,number]),
          "ast_map_to_string": Module.cwrap("Z3_ast_map_to_string", "string", [number,number]),
          "algebraic_is_value": Module.cwrap("Z3_algebraic_is_value", "number", [number,number]),
          "algebraic_is_pos": Module.cwrap("Z3_algebraic_is_pos", "number", [number,number]),
          "algebraic_is_neg": Module.cwrap("Z3_algebraic_is_neg", "number", [number,number]),
          "algebraic_is_zero": Module.cwrap("Z3_algebraic_is_zero", "number", [number,number]),
          "algebraic_sign": Module.cwrap("Z3_algebraic_sign", "number", [number,number]),
          "algebraic_add": Module.cwrap("Z3_algebraic_add", "number", [number,number,number]),
          "algebraic_sub": Module.cwrap("Z3_algebraic_sub", "number", [number,number,number]),
          "algebraic_mul": Module.cwrap("Z3_algebraic_mul", "number", [number,number,number]),
          "algebraic_div": Module.cwrap("Z3_algebraic_div", "number", [number,number,number]),
          "algebraic_root": Module.cwrap("Z3_algebraic_root", "number", [number,number,number]),
          "algebraic_power": Module.cwrap("Z3_algebraic_power", "number", [number,number,number]),
          "algebraic_lt": Module.cwrap("Z3_algebraic_lt", "number", [number,number,number]),
          "algebraic_gt": Module.cwrap("Z3_algebraic_gt", "number", [number,number,number]),
          "algebraic_le": Module.cwrap("Z3_algebraic_le", "number", [number,number,number]),
          "algebraic_ge": Module.cwrap("Z3_algebraic_ge", "number", [number,number,number]),
          "algebraic_eq": Module.cwrap("Z3_algebraic_eq", "number", [number,number,number]),
          "algebraic_neq": Module.cwrap("Z3_algebraic_neq", "number", [number,number,number]),
          "algebraic_roots": Module.cwrap("Z3_algebraic_roots", "number", [number,number,number,number]),
          "algebraic_eval": Module.cwrap("Z3_algebraic_eval", "number", [number,number,number,number]),
          "algebraic_get_poly": Module.cwrap("Z3_algebraic_get_poly", "number", [number,number]),
          "algebraic_get_i": Module.cwrap("Z3_algebraic_get_i", "number", [number,number]),
          "polynomial_subresultants": Module.cwrap("Z3_polynomial_subresultants", "number", [number,number,number,number]),
          "rcf_del": Module.cwrap("Z3_rcf_del", "number", [number,number]),
          "rcf_mk_rational": Module.cwrap("Z3_rcf_mk_rational", "number", [number,string]),
          "rcf_mk_small_int": Module.cwrap("Z3_rcf_mk_small_int", "number", [number,number]),
          "rcf_mk_pi": Module.cwrap("Z3_rcf_mk_pi", "number", [number]),
          "rcf_mk_e": Module.cwrap("Z3_rcf_mk_e", "number", [number]),
          "rcf_mk_infinitesimal": Module.cwrap("Z3_rcf_mk_infinitesimal", "number", [number]),
          "rcf_mk_roots": Module.cwrap("Z3_rcf_mk_roots", "number", [number,number,number,number]),
          "rcf_add": Module.cwrap("Z3_rcf_add", "number", [number,number,number]),
          "rcf_sub": Module.cwrap("Z3_rcf_sub", "number", [number,number,number]),
          "rcf_mul": Module.cwrap("Z3_rcf_mul", "number", [number,number,number]),
          "rcf_div": Module.cwrap("Z3_rcf_div", "number", [number,number,number]),
          "rcf_neg": Module.cwrap("Z3_rcf_neg", "number", [number,number]),
          "rcf_inv": Module.cwrap("Z3_rcf_inv", "number", [number,number]),
          "rcf_power": Module.cwrap("Z3_rcf_power", "number", [number,number,number]),
          "rcf_lt": Module.cwrap("Z3_rcf_lt", "number", [number,number,number]),
          "rcf_gt": Module.cwrap("Z3_rcf_gt", "number", [number,number,number]),
          "rcf_le": Module.cwrap("Z3_rcf_le", "number", [number,number,number]),
          "rcf_ge": Module.cwrap("Z3_rcf_ge", "number", [number,number,number]),
          "rcf_eq": Module.cwrap("Z3_rcf_eq", "number", [number,number,number]),
          "rcf_neq": Module.cwrap("Z3_rcf_neq", "number", [number,number,number]),
          "rcf_num_to_string": Module.cwrap("Z3_rcf_num_to_string", "string", [number,number,number,number]),
          "rcf_num_to_decimal_string": Module.cwrap("Z3_rcf_num_to_decimal_string", "string", [number,number,number]),
          "rcf_get_numerator_denominator": Module.cwrap("Z3_rcf_get_numerator_denominator", "number", [number,number,number,number]),
          "mk_fixedpoint": Module.cwrap("Z3_mk_fixedpoint", "number", [number]),
          "fixedpoint_inc_ref": Module.cwrap("Z3_fixedpoint_inc_ref", "number", [number,number]),
          "fixedpoint_dec_ref": Module.cwrap("Z3_fixedpoint_dec_ref", "number", [number,number]),
          "fixedpoint_add_rule": Module.cwrap("Z3_fixedpoint_add_rule", "number", [number,number,number,number]),
          "fixedpoint_add_fact": Module.cwrap("Z3_fixedpoint_add_fact", "number", [number,number,number,number,number]),
          "fixedpoint_assert": Module.cwrap("Z3_fixedpoint_assert", "number", [number,number,number]),
          "fixedpoint_query": Module.cwrap("Z3_fixedpoint_query", "number", [number,number,number]),
          "fixedpoint_query_relations": Module.cwrap("Z3_fixedpoint_query_relations", "number", [number,number,number,number]),
          "fixedpoint_get_answer": Module.cwrap("Z3_fixedpoint_get_answer", "number", [number,number]),
          "fixedpoint_get_reason_unknown": Module.cwrap("Z3_fixedpoint_get_reason_unknown", "string", [number,number]),
          "fixedpoint_update_rule": Module.cwrap("Z3_fixedpoint_update_rule", "number", [number,number,number,number]),
          "fixedpoint_get_num_levels": Module.cwrap("Z3_fixedpoint_get_num_levels", "number", [number,number,number]),
          "fixedpoint_get_cover_delta": Module.cwrap("Z3_fixedpoint_get_cover_delta", "number", [number,number,number,number]),
          "fixedpoint_add_cover": Module.cwrap("Z3_fixedpoint_add_cover", "number", [number,number,number,number,number]),
          "fixedpoint_get_statistics": Module.cwrap("Z3_fixedpoint_get_statistics", "number", [number,number]),
          "fixedpoint_register_relation": Module.cwrap("Z3_fixedpoint_register_relation", "number", [number,number,number]),
          "fixedpoint_set_predicate_representation": Module.cwrap("Z3_fixedpoint_set_predicate_representation", "number", [number,number,number,number,number]),
          "fixedpoint_get_rules": Module.cwrap("Z3_fixedpoint_get_rules", "number", [number,number]),
          "fixedpoint_get_assertions": Module.cwrap("Z3_fixedpoint_get_assertions", "number", [number,number]),
          "fixedpoint_set_params": Module.cwrap("Z3_fixedpoint_set_params", "number", [number,number,number]),
          "fixedpoint_get_help": Module.cwrap("Z3_fixedpoint_get_help", "string", [number,number]),
          "fixedpoint_get_param_descrs": Module.cwrap("Z3_fixedpoint_get_param_descrs", "number", [number,number]),
          "fixedpoint_to_string": Module.cwrap("Z3_fixedpoint_to_string", "string", [number,number,number,number]),
          "fixedpoint_from_string": Module.cwrap("Z3_fixedpoint_from_string", "number", [number,number,string]),
          "fixedpoint_from_file": Module.cwrap("Z3_fixedpoint_from_file", "number", [number,number,string]),
          "fixedpoint_init": Module.cwrap("Z3_fixedpoint_init", "number", [number,number,number]),
          "fixedpoint_set_reduce_assign_callback": Module.cwrap("Z3_fixedpoint_set_reduce_assign_callback", "number", [number,number,number]),
          "fixedpoint_set_reduce_app_callback": Module.cwrap("Z3_fixedpoint_set_reduce_app_callback", "number", [number,number,number]),
          "fixedpoint_add_callback": Module.cwrap("Z3_fixedpoint_add_callback", "number", [number,number,number,number,number,number]),
          "fixedpoint_add_constraint": Module.cwrap("Z3_fixedpoint_add_constraint", "number", [number,number,number,number]),
          "mk_optimize": Module.cwrap("Z3_mk_optimize", "number", [number]),
          "optimize_inc_ref": Module.cwrap("Z3_optimize_inc_ref", "number", [number,number]),
          "optimize_dec_ref": Module.cwrap("Z3_optimize_dec_ref", "number", [number,number]),
          "optimize_assert": Module.cwrap("Z3_optimize_assert", "number", [number,number,number]),
          "optimize_assert_and_track": Module.cwrap("Z3_optimize_assert_and_track", "number", [number,number,number,number]),
          "optimize_assert_soft": Module.cwrap("Z3_optimize_assert_soft", "number", [number,number,number,string,number]),
          "optimize_maximize": Module.cwrap("Z3_optimize_maximize", "number", [number,number,number]),
          "optimize_minimize": Module.cwrap("Z3_optimize_minimize", "number", [number,number,number]),
          "optimize_push": Module.cwrap("Z3_optimize_push", "number", [number,number]),
          "optimize_pop": Module.cwrap("Z3_optimize_pop", "number", [number,number]),
          "optimize_check": Module.cwrap("Z3_optimize_check", "number", [number,number,number,number]),
          "optimize_get_reason_unknown": Module.cwrap("Z3_optimize_get_reason_unknown", "string", [number,number]),
          "optimize_get_model": Module.cwrap("Z3_optimize_get_model", "number", [number,number]),
          "optimize_get_unsat_core": Module.cwrap("Z3_optimize_get_unsat_core", "number", [number,number]),
          "optimize_set_params": Module.cwrap("Z3_optimize_set_params", "number", [number,number,number]),
          "optimize_get_param_descrs": Module.cwrap("Z3_optimize_get_param_descrs", "number", [number,number]),
          "optimize_get_lower": Module.cwrap("Z3_optimize_get_lower", "number", [number,number,number]),
          "optimize_get_upper": Module.cwrap("Z3_optimize_get_upper", "number", [number,number,number]),
          "optimize_get_lower_as_vector": Module.cwrap("Z3_optimize_get_lower_as_vector", "number", [number,number,number]),
          "optimize_get_upper_as_vector": Module.cwrap("Z3_optimize_get_upper_as_vector", "number", [number,number,number]),
          "optimize_to_string": Module.cwrap("Z3_optimize_to_string", "string", [number,number]),
          "optimize_from_string": Module.cwrap("Z3_optimize_from_string", "number", [number,number,string]),
          "optimize_from_file": Module.cwrap("Z3_optimize_from_file", "number", [number,number,string]),
          "optimize_get_help": Module.cwrap("Z3_optimize_get_help", "string", [number,number]),
          "optimize_get_statistics": Module.cwrap("Z3_optimize_get_statistics", "number", [number,number]),
          "optimize_get_assertions": Module.cwrap("Z3_optimize_get_assertions", "number", [number,number]),
          "optimize_get_objectives": Module.cwrap("Z3_optimize_get_objectives", "number", [number,number]),
          "mk_fpa_rounding_mode_sort": Module.cwrap("Z3_mk_fpa_rounding_mode_sort", "number", [number]),
          "mk_fpa_round_nearest_ties_to_even": Module.cwrap("Z3_mk_fpa_round_nearest_ties_to_even", "number", [number]),
          "mk_fpa_rne": Module.cwrap("Z3_mk_fpa_rne", "number", [number]),
          "mk_fpa_round_nearest_ties_to_away": Module.cwrap("Z3_mk_fpa_round_nearest_ties_to_away", "number", [number]),
          "mk_fpa_rna": Module.cwrap("Z3_mk_fpa_rna", "number", [number]),
          "mk_fpa_round_toward_positive": Module.cwrap("Z3_mk_fpa_round_toward_positive", "number", [number]),
          "mk_fpa_rtp": Module.cwrap("Z3_mk_fpa_rtp", "number", [number]),
          "mk_fpa_round_toward_negative": Module.cwrap("Z3_mk_fpa_round_toward_negative", "number", [number]),
          "mk_fpa_rtn": Module.cwrap("Z3_mk_fpa_rtn", "number", [number]),
          "mk_fpa_round_toward_zero": Module.cwrap("Z3_mk_fpa_round_toward_zero", "number", [number]),
          "mk_fpa_rtz": Module.cwrap("Z3_mk_fpa_rtz", "number", [number]),
          "mk_fpa_sort": Module.cwrap("Z3_mk_fpa_sort", "number", [number,number,number]),
          "mk_fpa_sort_half": Module.cwrap("Z3_mk_fpa_sort_half", "number", [number]),
          "mk_fpa_sort_16": Module.cwrap("Z3_mk_fpa_sort_16", "number", [number]),
          "mk_fpa_sort_single": Module.cwrap("Z3_mk_fpa_sort_single", "number", [number]),
          "mk_fpa_sort_32": Module.cwrap("Z3_mk_fpa_sort_32", "number", [number]),
          "mk_fpa_sort_double": Module.cwrap("Z3_mk_fpa_sort_double", "number", [number]),
          "mk_fpa_sort_64": Module.cwrap("Z3_mk_fpa_sort_64", "number", [number]),
          "mk_fpa_sort_quadruple": Module.cwrap("Z3_mk_fpa_sort_quadruple", "number", [number]),
          "mk_fpa_sort_128": Module.cwrap("Z3_mk_fpa_sort_128", "number", [number]),
          "mk_fpa_nan": Module.cwrap("Z3_mk_fpa_nan", "number", [number,number]),
          "mk_fpa_inf": Module.cwrap("Z3_mk_fpa_inf", "number", [number,number,number]),
          "mk_fpa_zero": Module.cwrap("Z3_mk_fpa_zero", "number", [number,number,number]),
          "mk_fpa_fp": Module.cwrap("Z3_mk_fpa_fp", "number", [number,number,number,number]),
          "mk_fpa_numeral_float": Module.cwrap("Z3_mk_fpa_numeral_float", "number", [number,number,number]),
          "mk_fpa_numeral_double": Module.cwrap("Z3_mk_fpa_numeral_double", "number", [number,number,number]),
          "mk_fpa_numeral_int": Module.cwrap("Z3_mk_fpa_numeral_int", "number", [number,number,number]),
          "mk_fpa_numeral_int_uint": Module.cwrap("Z3_mk_fpa_numeral_int_uint", "number", [number,number,number,number,number]),
          "mk_fpa_numeral_int64_uint64": Module.cwrap("Z3_mk_fpa_numeral_int64_uint64", "number", [number,number,number,number,number]),
          "mk_fpa_abs": Module.cwrap("Z3_mk_fpa_abs", "number", [number,number]),
          "mk_fpa_neg": Module.cwrap("Z3_mk_fpa_neg", "number", [number,number]),
          "mk_fpa_add": Module.cwrap("Z3_mk_fpa_add", "number", [number,number,number,number]),
          "mk_fpa_sub": Module.cwrap("Z3_mk_fpa_sub", "number", [number,number,number,number]),
          "mk_fpa_mul": Module.cwrap("Z3_mk_fpa_mul", "number", [number,number,number,number]),
          "mk_fpa_div": Module.cwrap("Z3_mk_fpa_div", "number", [number,number,number,number]),
          "mk_fpa_fma": Module.cwrap("Z3_mk_fpa_fma", "number", [number,number,number,number,number]),
          "mk_fpa_sqrt": Module.cwrap("Z3_mk_fpa_sqrt", "number", [number,number,number]),
          "mk_fpa_rem": Module.cwrap("Z3_mk_fpa_rem", "number", [number,number,number]),
          "mk_fpa_round_to_integral": Module.cwrap("Z3_mk_fpa_round_to_integral", "number", [number,number,number]),
          "mk_fpa_min": Module.cwrap("Z3_mk_fpa_min", "number", [number,number,number]),
          "mk_fpa_max": Module.cwrap("Z3_mk_fpa_max", "number", [number,number,number]),
          "mk_fpa_leq": Module.cwrap("Z3_mk_fpa_leq", "number", [number,number,number]),
          "mk_fpa_lt": Module.cwrap("Z3_mk_fpa_lt", "number", [number,number,number]),
          "mk_fpa_geq": Module.cwrap("Z3_mk_fpa_geq", "number", [number,number,number]),
          "mk_fpa_gt": Module.cwrap("Z3_mk_fpa_gt", "number", [number,number,number]),
          "mk_fpa_eq": Module.cwrap("Z3_mk_fpa_eq", "number", [number,number,number]),
          "mk_fpa_is_normal": Module.cwrap("Z3_mk_fpa_is_normal", "number", [number,number]),
          "mk_fpa_is_subnormal": Module.cwrap("Z3_mk_fpa_is_subnormal", "number", [number,number]),
          "mk_fpa_is_zero": Module.cwrap("Z3_mk_fpa_is_zero", "number", [number,number]),
          "mk_fpa_is_infinite": Module.cwrap("Z3_mk_fpa_is_infinite", "number", [number,number]),
          "mk_fpa_is_nan": Module.cwrap("Z3_mk_fpa_is_nan", "number", [number,number]),
          "mk_fpa_is_negative": Module.cwrap("Z3_mk_fpa_is_negative", "number", [number,number]),
          "mk_fpa_is_positive": Module.cwrap("Z3_mk_fpa_is_positive", "number", [number,number]),
          "mk_fpa_to_fp_bv": Module.cwrap("Z3_mk_fpa_to_fp_bv", "number", [number,number,number]),
          "mk_fpa_to_fp_float": Module.cwrap("Z3_mk_fpa_to_fp_float", "number", [number,number,number,number]),
          "mk_fpa_to_fp_real": Module.cwrap("Z3_mk_fpa_to_fp_real", "number", [number,number,number,number]),
          "mk_fpa_to_fp_signed": Module.cwrap("Z3_mk_fpa_to_fp_signed", "number", [number,number,number,number]),
          "mk_fpa_to_fp_unsigned": Module.cwrap("Z3_mk_fpa_to_fp_unsigned", "number", [number,number,number,number]),
          "mk_fpa_to_ubv": Module.cwrap("Z3_mk_fpa_to_ubv", "number", [number,number,number,number]),
          "mk_fpa_to_sbv": Module.cwrap("Z3_mk_fpa_to_sbv", "number", [number,number,number,number]),
          "mk_fpa_to_real": Module.cwrap("Z3_mk_fpa_to_real", "number", [number,number]),
          "fpa_get_ebits": Module.cwrap("Z3_fpa_get_ebits", "number", [number,number]),
          "fpa_get_sbits": Module.cwrap("Z3_fpa_get_sbits", "number", [number,number]),
          "fpa_is_numeral_nan": Module.cwrap("Z3_fpa_is_numeral_nan", "number", [number,number]),
          "fpa_is_numeral_inf": Module.cwrap("Z3_fpa_is_numeral_inf", "number", [number,number]),
          "fpa_is_numeral_zero": Module.cwrap("Z3_fpa_is_numeral_zero", "number", [number,number]),
          "fpa_is_numeral_normal": Module.cwrap("Z3_fpa_is_numeral_normal", "number", [number,number]),
          "fpa_is_numeral_subnormal": Module.cwrap("Z3_fpa_is_numeral_subnormal", "number", [number,number]),
          "fpa_is_numeral_positive": Module.cwrap("Z3_fpa_is_numeral_positive", "number", [number,number]),
          "fpa_is_numeral_negative": Module.cwrap("Z3_fpa_is_numeral_negative", "number", [number,number]),
          "fpa_get_numeral_sign_bv": Module.cwrap("Z3_fpa_get_numeral_sign_bv", "number", [number,number]),
          "fpa_get_numeral_significand_bv": Module.cwrap("Z3_fpa_get_numeral_significand_bv", "number", [number,number]),
          "fpa_get_numeral_sign": Module.cwrap("Z3_fpa_get_numeral_sign", "number", [number,number,number]),
          "fpa_get_numeral_significand_string": Module.cwrap("Z3_fpa_get_numeral_significand_string", "string", [number,number]),
          "fpa_get_numeral_significand_uint64": Module.cwrap("Z3_fpa_get_numeral_significand_uint64", "number", [number,number,number]),
          "fpa_get_numeral_exponent_string": Module.cwrap("Z3_fpa_get_numeral_exponent_string", "string", [number,number,number]),
          "fpa_get_numeral_exponent_int64": Module.cwrap("Z3_fpa_get_numeral_exponent_int64", "number", [number,number,number,number]),
          "fpa_get_numeral_exponent_bv": Module.cwrap("Z3_fpa_get_numeral_exponent_bv", "number", [number,number,number]),
          "mk_fpa_to_ieee_bv": Module.cwrap("Z3_mk_fpa_to_ieee_bv", "number", [number,number]),
          "mk_fpa_to_fp_int_real": Module.cwrap("Z3_mk_fpa_to_fp_int_real", "number", [number,number,number,number,number]),
          "fixedpoint_query_from_lvl": Module.cwrap("Z3_fixedpoint_query_from_lvl", "number", [number,number,number,number]),
          "fixedpoint_get_ground_sat_answer": Module.cwrap("Z3_fixedpoint_get_ground_sat_answer", "number", [number,number]),
          "fixedpoint_get_rules_along_trace": Module.cwrap("Z3_fixedpoint_get_rules_along_trace", "number", [number,number]),
          "fixedpoint_get_rule_names_along_trace": Module.cwrap("Z3_fixedpoint_get_rule_names_along_trace", "number", [number,number]),
          "fixedpoint_add_invariant": Module.cwrap("Z3_fixedpoint_add_invariant", "number", [number,number,number,number]),
          "fixedpoint_get_reachable": Module.cwrap("Z3_fixedpoint_get_reachable", "number", [number,number,number]),
          "qe_model_project": Module.cwrap("Z3_qe_model_project", "number", [number,number,number,number,number]),
          "qe_model_project_skolem": Module.cwrap("Z3_qe_model_project_skolem", "number", [number,number,number,number,number,number]),
          "model_extrapolate": Module.cwrap("Z3_model_extrapolate", "number", [number,number,number]),
          "qe_lite": Module.cwrap("Z3_qe_lite", "number", [number,number,number]),
    }
